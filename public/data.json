[
    { "id":1,
      "title": "What is React?",
      "description": "React(aka React.js or ReactJS) is an open-source front-end JavaScript library that is used for building composable user interfaces, especially for single-page applications. It is used for handling view layer for web and mobile apps based on components in a declarative approach."
    },
    {
      "id":2,
      "title": "What is JSX?",
      "description": "JSX stands for JavaScript XML and it is an XML-like syntax extension to ECMAScript. Basically it just provides the syntactic sugar for the React.createElement(type, props, ...children) function, giving us expressiveness of JavaScript along with HTML like template syntax. "
    },
    {
      "id":3,
      "title": "Can web browsers read JSX directly? ",
      "description": "Web browsers cannot read JSX directly. This is because they are built to only read regular JS objects and JSX is not a regular JavaScript object. For a web browser to read a JSX file, the file needs to be transformed into a regular JavaScript object. For this, we use Babel. "
    },
    {
      "id":4,
      "title": "What is state in React?",
      "description": "State of a component is an object that holds some information that may change over the lifetime of the component. The important point is whenever the state object changes, the component re-renders. It is always recommended to make our state as simple as possible and minimize the number of stateful components."
    },
    {
      "id":5,
      "title": "What are props in React?",
      "description": "Props are inputs to components. They are single values or objects containing a set of values that are passed to components on creation similar to HTML-tag attributes. Here, the data is passed down from a parent component to a child component."
    },
    {
      "id":6,
      "title": "What is the difference between state and props?",
      "description": "In React, both state and props are plain JavaScript objects and used to manage the data of a component, but they are used in different ways and have different characteristics. state is managed by the component itself and can be updated using the setState() function. Unlike props, state can be modified by the component and is used to manage the internal state of the component. Changes in the state trigger a re-render of the component and its children. props (short for 'properties') are passed to a component by its parent component and are read-only, meaning that they cannot be modified by the component itself. props can be used to configure the behavior of a component and to pass data between components."
    },
    {
      "id":7,
      "title": "What are synthetic events in React?",
      "description": "Synthetic events are the objects which act as a cross-browser wrapper around the browserâ€™s native event. They combine the behavior of different browsers into one API. This is done to make sure that the events show consistent properties across different browsers."
    },
    {
      "id":8,
      "title": "What are Pure Components?",
      "description": "Pure components are the simplest and fastest components which can be written. They can replace any component which only has a render(). These components enhance the simplicity of the code and performance of the application."
    }
  ]
  